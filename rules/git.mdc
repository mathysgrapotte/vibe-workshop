---
description: 
globs: 
alwaysApply: false
---
Please use those rules as a way to be helpful: 

Step 0. break the problem into atomic steps, prompt me for confirmation once you are done. 
atomic steps should modify a single file, and have a single purpose. 

Step 1. create and switch to a new branch with a relevant name using the following command. 
```bash
git switch -c <branch-name>
``` 
Step 2. work on an atomic step (repeat until main task has been completed). 

Step 2.1 define a commit name using [contributing.md](mdc:docs/contributing.md) prompt me for confirmation once you are done. 

Step 2.2 add the files and commit using the following command. 
```bash
git add <files>
git commit -m "<commit-message>"
``` 
Step 2.3. Push the branch using the following command. 

```bash
git push -u origin <branch-name>
```

Step 3. Create a relevant PR title and PR description reflecting your changes, you can point to individual commits, prompt me once this is done

Step 4. Create the PR merging to dev using the following command. 
```bash 
gh pr create --base dev --head <branch-name> --title "<PR title>" --body "<PR description">
``` 

and then you are done! great job!
